name: Release Version EcommerceApp 

env:
  DOTNET_VERSION: 8.0
  DOTNET_ROOT: /usr/share/dotnet 
on:
  push 
jobs:
  release:
    name: Build and Release EcommerceApp Package 
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4 

    - uses: snyk/actions/setup@master 

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Run Unit Tests
      run: dotnet test EcommerceApp/EcommerceApp.Tests/EcommerceApp.Tests.csproj --logger trx 

    - name: Build project
      run: dotnet build EcommerceApp/EcommerceApp.Api/EcommerceApp.Api.csproj -c Release 

    - name: Create Release Package
      run: dotnet pack EcommerceApp/EcommerceApp.Api/EcommerceApp.Api.csproj -c Release -o out

    - name: Create Git tag
      run: |
        VERSION=$(grep -oP '(?<=<Version>)(.*?)(?=</Version>)' EcommerceApp/EcommerceApp.Api/EcommerceApp.Api.csproj) 
        echo "Current Version: $VERSION"

        TAG="v${VERSION}"

        while git ls-remote --tags origin "$TAG" | grep -q "$TAG"; do
          echo "Tag $TAG already exists. Incrementing version."
          # Si el tag existe, incrementa la versión
          VERSION_INCREMENTED=$(echo $VERSION | awk -F. -v OFS=. '{$NF++;print}')
          TAG="v${VERSION_INCREMENTED}"
          VERSION=$VERSION_INCREMENTED  # Actualiza la versión para seguir incrementando
          echo "New version with increment: $TAG"
        done
        echo "NAME=$TAG" >> $GITHUB_ENV
        # Crear el nuevo tag
        # Configurar git user para el tag si es necesario (no estaba en el original, pero puede ser requerido)
        # git config user.name "GitHub Action"
        # git config user.email "action@github.com"
        git tag $TAG
        git push origin $TAG

    - name: tags available
      run: |
        git fetch --tags
        echo "Tags available after fetch:"
        git tag -l # MANTENIDO

    - name: Publish Release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ env.NAME }}
        name: "Release ${{ env.NAME }}"
        files: out/*.nupkg
        token: ${{ secrets.GH_TOKEN }} 